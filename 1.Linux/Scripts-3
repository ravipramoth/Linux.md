#!/bin/bash
# A simple for loop example

for item in "apple" "banana" "cherry"
do
    echo "Fruit: $item"
done
---------------------------- 
#syntax for while loop
    while [ condition ]
   do
    # commands to be executed
    Breaking the loop  
      done
 ------------------------------------------------



#!/bin/bash
# A simple while loop example

count=5
while [ $count -gt 0 ]
do
    echo "Countdown: $count"
    ((count--)) # Decrement the count
    #let count-- 
done
echo "Liftoff!"
-------------------------------------------------------------------------------''
# while loop with array 
#!/bin/bash
fruits=("apple" "banana" "cherry" "orange")
while [ ${#fruits[@]} -gt 0 ]
do
    echo "Fruit: ${fruits[0]}"
    fruits=("${fruits[@]:1}") # Remove the first element
done
-------------------------------------------------------
Functions in Bash Scripting
# Functions are reusable blocks of code that can be called multiple times in a script.
syntax:
# function_name() {

// resusable code

} 
function_name  # Call the function
------------------------------------------------------- 

#!/bin/bash
# A function to add two numbers


add_numbers() {
    local num1=$1
    local num2=$2
    local num3=$3
    local sum=$((num1 + num2 + num3))
    echo "The sum is: $sum"
}

# Call the function
add_numbers 5 10 15

add_numbers 10 55 33 


echo "The sum is: $sum"

-----------------------------------------------------------------------------

#!/bin/bash
# A function to check if a file exists

check_file() {
    local file_name=$1
    echo "File name is: $file_name"
    if [ -e "$file_name" ]; then
        echo "File $file_name exists."
    else
        echo "File $file_name does not exist."
    fi
}
# Call the function
check_file "test.txt" 
echo " outside the function"
echo "File name is: $file_name"

------------------------------------
#!/bin/bash
# A function to check if a user exists on the system

user_exists() {
    local username=$1
    if id "$username" &>/dev/null; then
        echo "User $username exists."
    else
        echo "User $username does not exist."
    fi
}

# Call the function
user_exists "root" 
user_exists "nonexistent_user"
user_exists "ec2-user"
----------------------------------------------------------------------

#!/bin/bash
# A function to print a multiplication table for a given number
read -p "Enter a number for multiplication table: " num
multiplication_table() {
    local num=$1
    for i in {1..10} # Loop from 1 to 10 
    do
        echo "$num x $i = $((num * i))"
    done
}

# Call the function
multiplication_table $num
--------------------------------------------------------------------------------

#!/bin/bash
# A function to print all elements of an array

print_array() {
    local arr=("$@")
    echo "Array elements are:"
    for element in "${arr[@]}"; do
        echo "$element"
    done
}

# Call the function
my_array=("apple" "banana" "cherry")
----------------------------------------------------
Function with Arrays: Printing Array Elements 

#!/bin/bash
# A function to print all elements of an array

print_array() {
    local arr=("$@")
    echo "Array elements are:"
    for element in "${arr[@]}"; do
        echo "$element"
    done
}

# Call the function
my_array=("apple" "banana" "cherry")
print_array "${my_array[@]}"
------------------------------------------------------------------- 

