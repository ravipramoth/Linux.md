--------------------------------------------
#!/bin/bash
if [[ $# -ne 1 ]] ; then 
    echo "This script needs one input "
    echo "Usage: "
    echo "<scriptName> <requiredCommand>"
    exit 1
fi 
reqCmd=${1}

while IFS=',' read serverName userName 
do 
    echo "Executing the command ${reqCmd} on ${serverName}"
    result=$(ssh -n -E /dev/null -o StrictHostKeyChecking=No ${userName}@${serverName} "${reqCmd}")
    if [[ $? -eq  0 ]] ; then 
        echo "${userName} ${serverName} : ${result}"
    else
        echo "Failed to execute the commadn ${reqCmd} on ${serverName}"
    fi 
done < <(cat remoteServers.txt | awk 'NR != 1 ')
-----------------------------------------------------------------------------------------------
prodution scripts :

#!/bin/bash
serviceName=${1}
mailTo=ravipramoth@gmail.com
PS=/usr/bin/ps
GREP=/bin/grep
WC=/usr/bin/wc
ECHO=/bin/echo
HOSTNAME=/usr/bin/hostname
MAILX=/usr/bin/mailx 
TEE=/usr/bin/tee
LOG_FILE=/root/log/$(basename $0)_$(date '+%F').log
pc=$(ps -ef | grep -i docker | grep -v grep | wc -l)
echo $pc
# ps -ef | grep docker 
if [[ ${pc} -eq 0 ]] ; then
    ${ECHO} " $(date '+%F')Service ${serviceName} is not up and running on host: $(${HOSTNAME}) " | ${TEE} -a ${LOG_FILE}
    ${ECHO} " $(date '+%F') Service ${serviceName} is not up and running on host: $(${HOSTNAME})"  | ${MAILX} -s "Alert Service ${serviceName} status" ${mailTo}
else
    ${ECHO} "$(date '+%F') Service ${serviceName} is up and running" | ${TEE} -a ${LOG_FILE}
    ${ECHO} "$(date '+%F') Service ${serviceName} is up and running"
fi

--------------------------------------------------------------------------------------------    
